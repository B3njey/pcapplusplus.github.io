"use strict";(self.webpackChunkpcapplusplus_github_io=self.webpackChunkpcapplusplus_github_io||[]).push([[2083],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return a?n.createElement(k,i(i({ref:t},c),{},{components:a})):n.createElement(k,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2585:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={title:"Build on MacOS"},i="Build From Source on MacOS",o={unversionedId:"install/macos",id:"version-v21.11/install/macos",title:"Build on MacOS",description:"Prerequisites",source:"@site/versioned_docs/version-v21.11/install/macos.mdx",sourceDirName:"install",slug:"/install/macos",permalink:"/docs/v21.11/install/macos",draft:!1,editUrl:"https://github.com/PcapPlusPlus/pcapplusplus.github.io/edit/master/versioned_docs/version-v21.11/install/macos.mdx",tags:[],version:"v21.11",frontMatter:{title:"Build on MacOS"},sidebar:"docs",previous:{title:"Build on Linux",permalink:"/docs/v21.11/install/linux"},next:{title:"Build on Windows (VS)",permalink:"/docs/v21.11/install/vs"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Build the code",id:"build-the-code",level:2},{value:"Installation",id:"installation",level:2},{value:"Running tests",id:"running-tests",level:2}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"build-from-source-on-macos"},"Build From Source on MacOS"),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"In order to compile PcapPlusPlus on Linux please make sure you have the following components installed:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/xcode/"},"Xcode")," which contains all prerequisites required for PcapPlusPlus including gcc/g++ compiler and libpcap with all relevant header files")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure you have Xcode Command Line Tools. You can install it by running the following command in Terminal:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"xcode-select --install\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"PcapPlusPlus is available for both ",(0,r.kt)("strong",{parentName:"p"},"Intel")," and ",(0,r.kt)("strong",{parentName:"p"},"Apple silicon (M1)")," processors. To build for Apple silicon please use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--arm64")," flag (please see below)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"OPTIONAL")," - install ",(0,r.kt)("a",{parentName:"p",href:"https://facebook.github.io/zstd/"},"Zstd")," if you wish to enable ",(0,r.kt)("a",{parentName:"p",href:"../features#readingwriting-pcapng-files-with-compression"},"PCAPNG streaming compression support"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"brew install zstd\n")))),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Run the configuration script from PcapPlusPlus main directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./configure-mac_os_x.sh\n")),(0,r.kt)("p",null,"This script has the following command-line switches (you can also view then by running ",(0,r.kt)("inlineCode",{parentName:"p"},"./configure-mac_os_x.sh --help")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"./configure-mac_os_x.sh -h"),"):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Option"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"no switches")),(0,r.kt)("td",{parentName:"tr",align:"left"},"use the default configuration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"--use-immediate-mode"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"use libpcap immediate mode which enables getting packets as fast as possible (supported on libpcap>=1.5)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"--set-direction-enabled"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"set direction for capturing incoming or outgoing packets (supported on libpcap>=0.9.1)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"--install-dir"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"set a custom installation directory. Default is ",(0,r.kt)("inlineCode",{parentName:"td"},"/usr/local"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"--libpcap-include-dir"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"libpcap header files directory. This parameter is optional and if omitted PcapPlusPlus will look for the header files in the default include paths")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"--libpcap-lib-dir"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"libpcap pre compiled lib directory. This parameter is optional and if omitted PcapPlusPlus will look for the lib file in the default lib paths")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"--use-zstd"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"use ",(0,r.kt)("a",{parentName:"td",href:"../features#readingwriting-pcapng-files-with-compression"},"Zstd for PCAPNG streaming compression"),". This parameter is optional")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"--arm64"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"build for Apple Silicon M1 (arm64 architecture). This flag can be used for cross-compilation which means you can don't have to run the build on an Apple silicon M1 machine")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"-h")),", ",(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"--help"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"displays a help message and exits. No further actions are performed")))),(0,r.kt)("p",null,"Here are a few examples:"),(0,r.kt)("p",null,"Default configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./configure-mac_os_x.sh\n")),(0,r.kt)("p",null,"Configure PcapPlusPlus with libpcap's immediate mode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./configure-mac_os_x.sh --use-immediate-mode\n")),(0,r.kt)("p",null,"Configure PcapPlusPlus with libpcap's set direction:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./configure-mac_os_x.sh --set-direction-enabled\n")),(0,r.kt)("p",null,"Provide non-standard paths for libpcap header and library files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./configure-mac_os_x.sh --libpcap-include-dir /home/myuser/my-libpcap/include --libpcap-lib-dir /home/myuser/my-libpcap/lib\n")),(0,r.kt)("p",null,"Provide a custom installation directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./configure-mac_os_x.sh --install-dir /home/myuser/my-install-dir\n")),(0,r.kt)("p",null,"Use Zstd for pcapng compression:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./configure-linux.sh --use-zstd\n")),(0,r.kt)("h2",{id:"build-the-code"},"Build the code"),(0,r.kt)("p",null,"After running the config script, you're can safely build the code:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"make")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"make all")," from PcapPlusPlus main directory"),(0,r.kt)("li",{parentName:"ol"},"This should compile all libraries, unit-tests and examples"),(0,r.kt)("li",{parentName:"ol"},"To build the libraries only (without the unit-tests and examples) run ",(0,r.kt)("inlineCode",{parentName:"li"},"make libs")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"make all")),(0,r.kt)("li",{parentName:"ol"},"After compilation you can find the libraries, examples, header files and helpful makefiles under the ",(0,r.kt)("inlineCode",{parentName:"li"},"Dist")," directory")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"After build is complete you can run the installation script which will copy the library and header files to the installation directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo make install\n")),(0,r.kt)("p",null,"The default installation directory is ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/local")," which means the header files will be copied to ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/local/include/pcapplusplus")," and the library files will be copied to ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/local/lib"),"."),(0,r.kt)("p",null,"You can change the installation directory by using the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"--install-dir"))," switch in the configuration script."),(0,r.kt)("h2",{id:"running-tests"},"Running tests"),(0,r.kt)("p",null,"PcapPlusPlus contains a set of test-cases you can run to make sure that everything works correctly on your system. ",(0,r.kt)("a",{parentName:"p",href:"../tests"},"This guide")," contains detailed instructions on how to run them."))}u.isMDXComponent=!0}}]);