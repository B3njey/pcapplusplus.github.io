"use strict";(self.webpackChunkpcapplusplus_github_io=self.webpackChunkpcapplusplus_github_io||[]).push([[2556],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(a),c=l,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||i;return a?n.createElement(k,r(r({ref:t},u),{},{components:a})):n.createElement(k,r({ref:t},u))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9856:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const i={title:"Build on Windows (VS)"},r="Build From Source on Windows - Visual Studio",o={unversionedId:"install/vs",id:"install/vs",title:"Build on Windows (VS)",description:"Please visit the supported platforms page to see the Visual Studio versions currently supported in PcapPlusPlus.",source:"@site/docs/install/vs.mdx",sourceDirName:"install",slug:"/install/vs",permalink:"/docs/next/install/vs",draft:!1,editUrl:"https://github.com/PcapPlusPlus/pcapplusplus.github.io/edit/master/docs/install/vs.mdx",tags:[],version:"current",frontMatter:{title:"Build on Windows (VS)"},sidebar:"docs",previous:{title:"Build on MacOS",permalink:"/docs/next/install/macos"},next:{title:"Build on Windows (MinGW-w64)",permalink:"/docs/next/install/mingw"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Build",id:"build",level:2},{value:"Installation",id:"installation",level:2},{value:"Running tests",id:"running-tests",level:2}],u={toc:p};function d(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"build-from-source-on-windows---visual-studio"},"Build From Source on Windows - Visual Studio"),(0,l.kt)("p",null,"Please visit the ",(0,l.kt)("a",{parentName:"p",href:"../platforms"},"supported platforms page")," to see the Visual Studio versions currently supported in PcapPlusPlus."),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"In order to build PcapPlusPlus on Windows with Visual Studio you need the following components:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"A ",(0,l.kt)("a",{parentName:"li",href:"../platforms"},"supported version")," of Microsoft Visual Studio"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"CMake")," which can be installed from: ",(0,l.kt)("a",{parentName:"li",href:"https://cmake.org/install/"},"https://cmake.org/install/")," or with ",(0,l.kt)("inlineCode",{parentName:"li"},"pacman")," if using MSYS2: ",(0,l.kt)("inlineCode",{parentName:"li"},"pacman -S mingw-w64-x86_64-cmake")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://www.winpcap.org/devel.htm"},"WinPcap developer's pack")," ",(0,l.kt)("strong",{parentName:"li"},"OR")," ",(0,l.kt)("a",{parentName:"li",href:"https://nmap.org/npcap/guide/npcap-devguide.html"},"Npcap SDK")," - containing the wpcap library PcapPlusPlus is linking with plus relevant ",(0,l.kt)("inlineCode",{parentName:"li"},"h")," files.",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"WinPcap developer's pack can be downloaded from here: ",(0,l.kt)("a",{parentName:"li",href:"https://www.winpcap.org/devel.htm"},"https://www.winpcap.org/devel.htm")),(0,l.kt)("li",{parentName:"ol"},"Npcap SDK can be downloaded from here: ",(0,l.kt)("a",{parentName:"li",href:"https://nmap.org/npcap/#download"},"https://nmap.org/npcap/#download")))),(0,l.kt)("li",{parentName:"ol"},"In some cases you also need to download and install:",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads"},"Microsoft Visual C++ Redistributable")," for your version of Visual Studio"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/download/confirmation.aspx?id=14632"},"Microsoft Visual C++ 2010 Redistributable")))),(0,l.kt)("li",{parentName:"ol"},"OPTIONAL - download ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/facebook/zstd/releases/latest"},"Zstd")," libraries if you wish to enable ",(0,l.kt)("a",{parentName:"li",href:"../features#readingwriting-pcapng-files-with-compression"},"PCAPNG streaming compression support"))),(0,l.kt)("h2",{id:"build"},"Build"),(0,l.kt)("p",null,"Assuming you want to build PcapPlusPlus into a ",(0,l.kt)("inlineCode",{parentName:"p"},"build")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cmake -DPCAP_ROOT=<NpcapSDK_or_WinPcapDevPack_Directory> -S . -B build\n")),(0,l.kt)("p",null,"You can use the following CMake options to determine specific parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To build for a specific (non-default) version of Visual Studio you can use the ",(0,l.kt)("inlineCode",{parentName:"li"},"-G")," option, for example ",(0,l.kt)("inlineCode",{parentName:"li"},'-G "Visual Studio 16 2019"')," will builf for VS 2019"),(0,l.kt)("li",{parentName:"ul"},"To build for a specific platform you can use the ",(0,l.kt)("inlineCode",{parentName:"li"},"-A")," option, for example: ",(0,l.kt)("inlineCode",{parentName:"li"},"-A x64")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"-A Win32"))),(0,l.kt)("p",null,"This will create a VS Solution file in the build directory: ",(0,l.kt)("inlineCode",{parentName:"p"},"build\\PcapPlusPlus.sln")," and multiple VS project files ",(0,l.kt)("inlineCode",{parentName:"p"},".vcxproj"),"."),(0,l.kt)("p",null,"This solution file contains all the projects required to build the PcapPlusPlus libraries, examples, and tests. In this solution you'll find the ",(0,l.kt)("inlineCode",{parentName:"p"},"ALL_BUILD"),"\nproject that builds everything."),(0,l.kt)("p",null,"There are multiple options to build PcapPlusPlus:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use CMake and choose the configuration:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cmake --build build --config Release\n"))),(0,l.kt)("li",{parentName:"ul"},"Open Visual Studio, choose platform and configuration and build the ",(0,l.kt)("inlineCode",{parentName:"li"},"ALL_BUILD")," project"),(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"MSBuild")," and choose the platform and configuration, for example:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"msbuild PcapPlusPlus.sln -target:ALL_BUILD /p:Configuration=Release /p:Platform=x64\n")))),(0,l.kt)("p",null,"After a successful build the following artifacts will be created:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"PcapPlusPlus libs:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"build\\Common++\\<Debug/Release>\\libCommon++.a")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"build\\Packet++\\<Debug/Release>\\libPacket++.a")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"build\\Pcap++\\<Debug/Release>\\libPcap++.a")))),(0,l.kt)("li",{parentName:"ul"},"PcapPlusPlus examples binaries under ",(0,l.kt)("inlineCode",{parentName:"li"},"build\\examples_bin\\<Debug/Release>")),(0,l.kt)("li",{parentName:"ul"},"PcapPlusPlus tests:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"<PcapPlusPlus_Dir>\\Tests\\Packet++Test\\Bin\\Packet++Test.exe")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"<PcapPlusPlus_Dir>\\Tests\\Pcap++Test\\Bin\\Pcap++Test.exe"))))),(0,l.kt)("p",null,"The following configuration options are available (on top of CMake's built-in options):"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Option"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"-DPCAP_ROOT=<DIR>"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Npcap SDK or WinPcap developer pack directory (mandatory option)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"-DPCAPPP_BUILD_EXAMPLES=<ON/OFF>"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Build PcapPlusPlus examples (default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"ON")," if building the project itself, otherwise ",(0,l.kt)("inlineCode",{parentName:"td"},"OFF"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"-DPCAPPP_BUILD_TESTS=<ON/OFF>"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Build PcapPlusPlus tests (default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"ON")," if building the project itself, otherwise ",(0,l.kt)("inlineCode",{parentName:"td"},"OFF"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"-DPCAPPP_BUILD_TUTORIALS=<ON/OFF>"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Build PcapPlusPlus tutorials. This option is only available if ",(0,l.kt)("inlineCode",{parentName:"td"},"DPCAPPP_BUILD_EXAMPLES=ON"),". The tutorials binaries will be under ",(0,l.kt)("inlineCode",{parentName:"td"},"build\\tutorials_bin")," (default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"OFF"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"-DPCAPPP_INSTALL=<ON/OFF>"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Install PcapPlusPlus (default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"ON")," if building the project itself, otherwise ",(0,l.kt)("inlineCode",{parentName:"td"},"OFF"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"-DBUILD_SHARED_LIBS=<ON/OFF>"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Build shared libs (default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"OFF"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"-DPCAPPP_ENABLE_PCAP_IMMEDIATE_MODE=<ON/OFF>"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Enable pcap immediate mode, available only in Npcap (default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"OFF"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"-DPCAPPP_ENABLE_PCAP_SET_DIRECTION=<ON/OFF>"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Enable set direction for capturing incoming or outgoing packets (default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"OFF"),")")))),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,"Windows doesn't have a default install directory, but you may want to see all libs, header files and examples under one directory (which is not the ",(0,l.kt)("inlineCode",{parentName:"p"},"build")," directory).\nHere is how to acheive that:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'set DESTDIR=<DIR>\ncmake --install build --prefix "/"\n')),(0,l.kt)("h2",{id:"running-tests"},"Running tests"),(0,l.kt)("p",null,"PcapPlusPlus contains a set of test-cases you can run to make sure that everything works correctly on your system. ",(0,l.kt)("a",{parentName:"p",href:"../tests"},"This guide")," contains detailed instructions on how to run them."))}d.isMDXComponent=!0}}]);